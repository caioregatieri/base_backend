version: "3"
services:
  app:
    build: 
      context: ./
      dockerfile: Dockerfile
    image: base_backend
    environment: 
      NODE_ENV: development
    env_file: 
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - mongo
      - redis
    volumes:
      - ./public:/public
      - ./uploads:/uploads
  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: base_backend
  mongo:
    image: mongo
    environment: 
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports: 
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    restart: always
  redis:
    image: redis:alpine
    ports: 
      - "6379:6379"
    restart: always
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    restart: always
  admin-mongo:
    image: mrvautin/adminmongo
    ports: 
      - "1234:1234"
    environment:
      - HOST=0.0.0.0
    restart: always
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    ports: 
      - 9000:9000
      - 8000:8000
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
volumes: 
  portainer_data: